name: "Vprofile IAC"

on:
  push:
    branches:
      - stage
      - main
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
  AWS_ACCESS_KEY : ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION : us-east-1
  BUCKET_TF_STATE : ${{ secrets.BUCKET_TF_STATE }}
  EKS_CLUSTER_NAME : vprofile-eks

jobs:
  terraform:
    name: Apply terraform code changes
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.3


      - name: Terraform Init
        id: init
        run:  terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Format\
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate
    
      - name: Terraform Plan
        id: planning
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true
        

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure kube configfile
        id: getconfig
        if: steps.apply.outcome == 'success'
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}
          echo "Kubeconfig updated successfully"

      - name: Install ingress controller
        if: steps.apply.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.0/deploy/static/provider/cloud/deploy.yaml

